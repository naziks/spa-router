const nRouter=class{constructor(a={}){a=Object.assign({default_route:"/",start_hash:"#!",debug:!1,routes:{},notFound:()=>{}},a),this.start_hash=a.start_hash,this.default_route=a.default_route,this.routes=a.routes,this.notFoundRoute=a.notFound,this.debug=a.debug,this.route="",this.running=!1;let b=this;window.document.querySelectorAll("[nr-link]").forEach(a=>{a.addEventListener("click",function(){b.navigate(a.getAttribute("nr-link"))})})}on(a,b){return this.debug&&console.log(`Added route "${a}"`),this.routes[a]=b,this}match(a,b){return b=b.replace(/^\/|\/$/g,"").split("/"),a=a.replace(/^\/|\/$/g,"").split("/"),a.reduce((a,c,d)=>(":"==c[0]?a["var"][c.substr(1)]=b[d]:c!=b[d]&&(a.valid=!1),a),{valid:a.length==b.length,var:{}})}notFound(a){return this.notFoundRoute=a,this}navigate(a){return this.route=a,window.location=this.start_hash+a,window.location.hash==this.start_hash+a&&this.resolve(),this}resolve(){let a=window.location.hash.replace(this.start_hash,""),b=!1;this.debug&&console.log(`Looking for "${a}" route`),console.log(this);for(const c of Object.keys(this.routes)){let d=this.match(c,a);if(b=d.valid,d.valid){this.debug&&console.log(`Match found! Route variables: `,d.var),this.page=a,this.routes[c](d.var);break}}return b||(this.notFoundRoute(),this.route=404,this.debug&&console.error(`Route "${a}" not found!`)),this}start(){let a=this;return this.running?this.debug&&console.error(`nRouter is already running`):(this.running=!this.running,this.debug&&console.log(`nRouter Started!`),window.location.hash.includes(this.start_hash)?(this.debug&&console.log(`Found route in url!`),this.resolve()):(this.navigate(this.default_route),this.debug&&console.log(`Route in url not found. Navigation to default route`)),window.addEventListener("hashchange",function(){a.resolve()})),this}};
